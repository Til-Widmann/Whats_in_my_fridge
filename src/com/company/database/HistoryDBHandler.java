package com.company.database;

import com.company.database.dataObjects.History;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.LinkedList;

public class HistoryDBHandler extends SQLiteDBHandler{
    /**
     * Inserts a History object into the database.
     * @param history The history object that is to be inserted.
     * @return a int of the autogenerated key in the database or -1 in case of a database Error.
     */
    static  int insertHistory(History history) {
        try {
            c = DBConnect.getConnection();

            prepStm = c.prepareStatement("INSERT INTO History VALUES (?, ?, ?, ?)");
            prepStm.setInt(2, history.getFoodItemid());
            prepStm.setTimestamp(3, Timestamp.valueOf(history.getUseDate()));
            prepStm.setInt(4, history.getAmount());
            prepStm.execute();

            return prepStm.getGeneratedKeys().getInt(1);

        } catch (Exception e) {
            e.printStackTrace();
            return -1;
        }finally {
            close();
        }
    }

    /**
     * Returns all History entries of specific FoodItem.
     * @param foodItemId The FoodItem id which is used to search corresponding History entries.
     * @return A LinkedList of all matching History entries.
     */
    static LinkedList<History> getHistoryOf(int foodItemId) {
        try {
            c = DBConnect.getConnection();

            prepStm = c.prepareStatement("SELECT * FROM History WHERE FoodItemId = ? ORDER BY useDate");
            prepStm.setInt(1, foodItemId);
            ResultSet rs = prepStm.executeQuery();

            return getHistoryObjectListFrom(rs);

        }catch (Exception e) {
            e.printStackTrace();
            return null;
        }finally {
            close();
        }
    }

    private static LinkedList<History> getHistoryObjectListFrom(ResultSet rs) throws SQLException {
        LinkedList<History> histories = new LinkedList<>();
        while (rs.next()) {
            histories.add(new History(
                    rs.getInt("id"),
                    rs.getInt("FoodItemId"),
                    rs.getTimestamp("useDate").toLocalDateTime(),
                    rs.getInt("amount")
            ));
        }
        return histories;
    }
}
